---
title: welcome
date: 2017-02-23 19:27:20
layout: index
---


:markdown-it ## Web Basics
.row
  .col-md-6: :markdown-it
    * HTML and CSS
    * Classical Web Applications
  .col-md-6: :markdown-it
    * Single Page Applications with AJAX
    * Same Origin Policy


:markdown-it ## JavaScript
.row
  .col-md-6: :markdown-it
    ###### Functions and Scope:
    * [Functions](recipes/javascript/functions.html)
    * [Scope](recipes/javascript/scope.html)
    * [Hoisting](recipes/javascript/hoisting.html)

    ###### Callbacks and Async:
    * [Callbacks](recipes/javascript/callbacks.html)
    * [The Async library](recipes/javascript/async-library.html)

    ###### Promises:
    * ECMAScript 6 Promises
    * [The Q library](recipes/javascript/the-q-library.html)
    * The When library
    * The Bluebird library

    ###### Reactive Programming:
    * Observables
    * RxJS

  .col-md-6: :markdown-it
    ###### Generators:
    * ECMAScript 6 Generators
    * Generators with the Co library
    * Fibers and Futures

    ###### Object Oriented JavaScript:
    * Prototypes
    * Classes
    * Factories

    ###### ECMAScript 6:
    * Classes
    * Factories
    * Modules


:markdown-it ## AngularJS 1.x
.row
  .col-md-6: :markdown-it
    ###### Basic features:
    * [Features](recipes/angularjs-1.x/features.html)
    * [Principles](recipes/angularjs-1.x/principles.html)
    * [Controllers](recipes/angularjs-1.x/controllers.html)
    * [Services](recipes/angularjs-1.x/services.html)
    * [Filters](recipes/angularjs-1.x/filters.html)
    * [Directives](recipes/angularjs-1.x/directives.html)
    * [Routing](recipes/angularjs-1.x/routing.html)

    ###### End2End testing:
    * Setting up Protractor
    * Testing Conditions
    * Testing Events
    * Setting up CucumberJS
    * Testing with Gherkin
    * Behavior Driven Development

  .col-md-6: :markdown-it
    ###### Unit testing:
    * Setting up Karma
    * Testing Config and Run
    * Testing Services
    * Testing Controllers
    * Testing Routing
    * Testing HTTP
    * Testing Promises
    * Testing Watchers and Events
    * Test Driven Development


:markdown-it ## System and API Design
.row
  .col-md-6: :markdown-it
    * Domain Driven Design
    * REST
    * Model View Controller (MVC) Pattern


:markdown-it ## Git and versioning
.row
  .col-md-6: :markdown-it
    * Git Commit Messages
    * Git Branching Models
  .col-md-6: :markdown-it
    * Semantic Versioning (semver)

:markdown-it ## Software Design Patterns
.row
  .col-md-6: :markdown-it
    * Creational patterns
    * Structural patterns
    * Behavioral patterns
  .col-md-6: :markdown-it
    * Concurrency patterns
    * Cloud Patterns ([Source](http://cloudpatterns.org/compound_patterns/overview))
